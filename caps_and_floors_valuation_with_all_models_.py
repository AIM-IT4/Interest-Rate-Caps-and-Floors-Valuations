# -*- coding: utf-8 -*-
"""Caps and Floors Valuation with all  Models .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14CuOD9gIraZJvDDw2f1QhVgdH5DCGz-x
"""

!pip install financepy

import numpy as np
import matplotlib.pyplot as plt
from financepy.utils import *
from financepy.products.rates import *

"""## Building a Ibor Curve"""

valuation_date = Date(6, 6, 2022)

spot_days = 0
settlement_date = valuation_date
depoDCCType = DayCountTypes.THIRTY_E_360_ISDA

depos = []
depo = IborDeposit(settlement_date, "1M", 0.0230, depoDCCType); depos.append(depo)
depo = IborDeposit(settlement_date, "2M", 0.0230, depoDCCType); depos.append(depo)
depo = IborDeposit(settlement_date, "3M", 0.0230, depoDCCType); depos.append(depo)
depo = IborDeposit(settlement_date, "6M", 0.0230, depoDCCType); depos.append(depo)
depo = IborDeposit(settlement_date, "9M", 0.0230, depoDCCType); depos.append(depo)

accrual = DayCountTypes.THIRTY_E_360
freq = FrequencyTypes.SEMI_ANNUAL
longEnd = DateGenRuleTypes.BACKWARD
swapType = SwapTypes.PAY

spot_days = 2
settlement_date = valuation_date.add_weekdays(spot_days)

swaps = []
swap = IborSwap(settlement_date, "1Y", swapType, 0.0250, freq, accrual); swaps.append(swap)
swap = IborSwap(settlement_date, "2Y", swapType, 0.0255, freq, accrual); swaps.append(swap)
swap = IborSwap(settlement_date, "3Y", swapType, 0.0260, freq, accrual); swaps.append(swap)
swap = IborSwap(settlement_date, "4Y", swapType, 0.0265, freq, accrual); swaps.append(swap)
swap = IborSwap(settlement_date, "5Y", swapType, 0.0270, freq, accrual); swaps.append(swap)

libor_curve = IborSingleCurve(valuation_date, depos, [], swaps)

print(libor_curve)

"""## Creating a Cap and Floor"""

capType = FinCapFloorTypes.CAP
floorType = FinCapFloorTypes.FLOOR

strike_rate = 0.05

cap = IborCapFloor(settlement_date, "2Y", capType, strike_rate)
flr = IborCapFloor(settlement_date, "2Y", floorType, strike_rate)

print(cap)

print(flr)

model = Black(0.25)

cap.value(valuation_date, libor_curve, model)

flr.value(valuation_date, libor_curve, model)

cap.print_leg()



"""## SABR Model"""

alpha = 0.037; beta = 0.5; rho  = 0.1; nu = 0.573

model = SABR(alpha, beta, rho, nu)

cap.value(valuation_date, libor_curve, model)

flr.value(valuation_date, libor_curve, model)

"""## Hull White Model"""

sigma = 0.01; alpha = 0.005

model = HWTree(sigma, alpha)

cap.value(valuation_date, libor_curve, model)

flr.value(valuation_date, libor_curve, model)